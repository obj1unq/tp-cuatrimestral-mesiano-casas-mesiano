import capos.*
import bandos.*
import artefactos.*
import elementos.*

describe "tp1" {

 	fixture {
 		espejoFantastico.capo(capos.rolando())
 		libroDeHechizos.capo(capos.rolando())
		capos.rolando().obtenerArtefactos(collarDivino)
		capos.rolando().obtenerArtefactos(espadaDelDestino)
		}

	test "rolando lucha" {
		assert.equals(5, capos.rolando().lucha())
	}

 	test "rolando hechiceria" {
 		libroDeHechizos.capo(capos.rolando())
 		capos.rolando().obtenerArtefactos(libroDeHechizos)
		assert.equals(7, capos.rolando().hechiceria())
	}

	test "rolando armadura lucha" {
		capos.rolando().obtenerArtefactos(armaduras.armaduraBendecida())
		armaduras.armaduraBendecida().agregarRefuerzo(cotaDeMalla)
		assert.equals(8, capos.rolando().lucha())
	}

	test "rolando espejo hechiceria" {
		libroDeHechizos.capo(capos.rolando())
		capos.rolando().obtenerArtefactos(espejoFantastico)
		assert.equals(8, capos.rolando().lucha())
	}
 
	test "rolando excluir" {
		libroDeHechizos.capo(capos.rolando())
		capos.rolando().obtenerArtefactos(libroDeHechizos)
		capos.rolando().obtenerArtefactos(espejoFantastico)
		assert.equals(#{ ninguna, espadaDelDestino, libroDeHechizos, collarDivino }, espejoFantastico.autoExclusion())
	}

	test "rolando mejor artefacto" {
		libroDeHechizos.capo(capos.rolando())
		capos.rolando().obtenerArtefactos(espejoFantastico)
		assert.equals(espadaDelDestino, espejoFantastico.artefacto())
		assert.equals(capos.rolando(), espejoFantastico.capo())
	}
	

	

}

